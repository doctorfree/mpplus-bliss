# Maintainer: Ronald Record <github@ronrecord.com>

# Get the version and release from the VERSION file
# Move to use of pkgver() function with something like this:
#   git describe --long | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
#
pkgname=mpplus-bliss
pkgver=v1.0.0r1
pkgrel=1
pkgdesc="Blissify and Bliss-Analyze analyze and make playlists of MPD library songs that sound alike"
arch=('x86_64' 'armv7h')
url="https://github.com/doctorfree/mpplus-bliss"
license=('MIT')
depends=(util-linux bc boost-libs coreutils curl flac jq libcurl-compat libmpdclient ncurses readline taglib mediainfo mpd ffmpeg4.4 inotify-tools figlet tmux fzf mpc python python-pip python-numpy python-six mplayer eigen fftw clang libsamplerate chromaprint iniparser libyaml swig alsa-lib alsa-utils libpulse sndio sqlite qt5-base wget wmctrl xorg-xdpyinfo xorg-xprop xorg-xrandr yt-dlp)
makedepends=(boost cargo git pandoc qt5-tools zip)
optdepends=('cool-retro-term: cool retro terminal emulator')
install=mpplus-bliss.install
source=("${pkgname}::git+https://github.com/doctorfree/mpplus-bliss.git#tag=${pkgver}")
sha256sums=('SKIP')

export RUSTUP_TOOLCHAIN=stable
export CARGO_TARGET_DIR=target

prepare() {
  cd "${srcdir}/${pkgname}"
  for rustproj in bliss-analyze blissify
  do
    git clone https://github.com/doctorfree/${rustproj}
    cd ${rustproj}
    cargo fetch --locked --target "${CARCH}-unknown-linux-gnu"
    cd ..
  done
}

build() {
  cd "${srcdir}/${pkgname}"
  # Build bliss-analyze
  if [ -x scripts/build-bliss-analyze.sh ]
  then
    scripts/build-bliss-analyze.sh
  else
    PROJ=bliss-analyze
    [ -d ${PROJ} ] || git clone https://github.com/doctorfree/bliss-analyze
    [ -x ${PROJ}/target/release/bliss-analyze ] || {
      cd ${PROJ}
      PKGPATH=`pkg-config --variable pc_path pkg-config`
      [ -d /usr/lib/ffmpeg4.4/pkgconfig ] && {
        PKGPATH="/usr/lib/ffmpeg4.4/pkgconfig:${PKGPATH}"
      }
      export PKG_CONFIG_PATH="${PKGPATH}:/usr/lib/pkgconfig"
      cargo build --frozen --release --all-features
      cd ..
    }
  fi

  # Build blissify
  if [ -x scripts/build-blissify.sh ]
  then
    scripts/build-blissify.sh
  else
    PROJ=blissify
    [ -d ${PROJ} ] || git clone https://github.com/doctorfree/blissify
    [ -x ${PROJ}/target/release/blissify ] || {
      cd ${PROJ}
      PKGPATH=`pkg-config --variable pc_path pkg-config`
      [ -d /usr/lib/ffmpeg4.4/pkgconfig ] && {
        PKGPATH="/usr/lib/ffmpeg4.4/pkgconfig:${PKGPATH}"
      }
      export PKG_CONFIG_PATH="${PKGPATH}:/usr/lib/pkgconfig"
      cargo build --frozen --release --all-features
      cd ..
    }
  fi
}

package() {
  cd "${srcdir}/${pkgname}"
  destdir=usr
  for dir in "${destdir}" "${destdir}/share" "${destdir}/share/man" \
    "${destdir}/share/doc" "${destdir}/share/licenses" \
    "${destdir}/share/doc/${pkgname}" "${destdir}/share/${pkgname}" \
    "${destdir}/share/licenses/${pkgname}" \
    "${destdir}/share/doc/${pkgname}/blissify" \
    "${destdir}/share/doc/${pkgname}/bliss-analyze"
  do
    [ -d ${pkgdir}/${dir} ] || mkdir ${pkgdir}/${dir}
  done

  for dir in bin
  do
    [ -d ${pkgdir}/${destdir}/${dir} ] && rm -rf ${pkgdir}/${destdir}/${dir}
  done

  mkdir -p ${pkgdir}/${destdir}/bin
  [ -f blissify/target/release/blissify ] && {
    cp blissify/target/release/blissify ${pkgdir}/${destdir}/bin
  }
  [ -f bliss-analyze/target/release/bliss-analyze ] && {
    cp bliss-analyze/target/release/bliss-analyze ${pkgdir}/${destdir}/bin
  }
  cp copyright ${pkgdir}/${destdir}/share/doc/${pkgname}
  cp LICENSE ${pkgdir}/${destdir}/share/doc/${pkgname}
  cp LICENSE ${pkgdir}/${destdir}/share/licenses/${pkgname}
  cp NOTICE ${pkgdir}/${destdir}/share/doc/${pkgname}
  cp AUTHORS ${pkgdir}/${destdir}/share/doc/${pkgname}
  cp CHANGELOG.md ${pkgdir}/${destdir}/share/doc/${pkgname}
  cp README.md ${pkgdir}/${destdir}/share/doc/${pkgname}
  pandoc -f gfm README.md | tee ${pkgdir}/${destdir}/share/doc/${pkgname}/README.html > /dev/null
  gzip -9 ${pkgdir}/${destdir}/share/doc/${pkgname}/CHANGELOG.md

  cp blissify/CHANGELOG.md ${pkgdir}/${destdir}/share/doc/${pkgname}/blissify
  cp blissify/README.md ${pkgdir}/${destdir}/share/doc/${pkgname}/blissify

  cp bliss-analyze/ChangeLog ${pkgdir}/${destdir}/share/doc/${pkgname}/bliss-analyze
  cp bliss-analyze/LICENSE ${pkgdir}/${destdir}/share/doc/${pkgname}/bliss-analyze
  cp bliss-analyze/README.md ${pkgdir}/${destdir}/share/doc/${pkgname}/bliss-analyze

  cp -a man/man1 ${pkgdir}/${destdir}/share/man/man1

  chmod 644 ${pkgdir}/${destdir}/share/man/*/*
  chmod 755 ${pkgdir}/${destdir}/bin/* \
            ${pkgdir}/${destdir}/bin \
            ${pkgdir}/${destdir}/share/man \
            ${pkgdir}/${destdir}/share/man/*
}
